// Auto-generated by CMake
#include "cmd_glue_gen.h"
#include <string.h>

Command_t* cmd_collection[CMD_COUNT];

size_t cmd_glue_get_idx_by_name(const char* name)
{
    CMD_COUNT_CHECK_RET();
    for (size_t i = 0; i < CMD_COUNT; i++)
    {
        if (strcmp(cmd_collection[i]->name, name) == 0)
            return i;
    }
    return -1;
}

inline
Command_t* cmd_glue_get_cmd_by_idx(size_t idx)
{
    CMD_COUNT_CHECK_RET();
    return cmd_collection[idx];
}

void cmd_glue_init()
{
    CMD_COUNT_CHECK_VOID();
    int argmaxes[]      = {@CMD_ARGMAXES@};
    const char* names[] = {@CMD_NAMES@};
    cmd_fp_t* fptrs[]   = {@CMD_FPTRS@};
    for (size_t i = 0; i < CMD_COUNT; i++)
    {
       cmd_collection[i] = cmd_register(names[i], fptrs[i]);
    }
}

inline
void cmd_glue_deinit()
{
    CMD_COUNT_CHECK_VOID();
    for (size_t i = 0; i < CMD_COUNT; i++)
    {
        cmd_unregister(cmd_collection[i]);
    }
}

void cmd_glue_list_commands()
{
    CMD_COUNT_CHECK_VOID();
    cli_printf("Available commands: ");
    for (size_t i = 0; i < CMD_COUNT; i++)
    {
        cli_printf("%s ", cmd_collection[i]->name);
    }

    cli_printf("\n");
}

inline
Command_t** cmd_glue_get_collection()
{
    CMD_COUNT_CHECK_RET();
    return cmd_collection;
}